---
_title: Describing Syntax and Semantics
_date: Tue Jan 24 15:06:44 GMT 2017
Lexeme: The lowest level syntactic unit of a language (e.g., *, def, start, etc.)
Token: A sequence of characters that can be treated as a single logical entity, such
  as identifier, keyword etc.
Backus-Naur Form:
  Definition: A notation for context-free grammars
  Symbols:
    "→": Defines a rule
    "⇒": Using a rule
    "|": Or
    ";": Statement before this then statement after this
  Non Terminals: A finite alphabet (ie X, Y, Z)
  Terminals: Characters which cannot be substituted further (ie a, b, c)
  Start Symbols: The initial symbol to produce the alphabet with (ie X)
  Productions: 'Available substitutions for characters to create strings (ie X ->
    aX: This means that X can be substituted by aX in our language)'
Extended BNF:
  Symbols:
    Definition: "="
    Concatenation: ","
    Termination: ";"
    Alternation: "|"
    Optional: "[ ... ]"
    Repetition: "{ ... }"
    Grouping: "( ... )"
    Terminal string:
    - '" ... "'
    - "' ... '"
    Comment: "(* ... *)"
    Special sequence: "? ... ?"
    Exception: "-"
Semantics:
  Definition: The mathematical study of the meaning of programming languages. Done
    by evaluating the meaning of syntactically legal strings defined by a specific
    programming language, showing the computation involved
  Axiomatic semantics: An approach based on mathematical logic to proving the correctness
    of computer programs
  Denotational semantics: Models programs as static mathematical objects, namely as
    set-theoretic functions with specific properties
  Operational semantics: A mathematical model of programming language execution. It
    is, in essence, an interpreter defined mathematically
Attribute grammars:
  Definition: A context-free grammar with the addition of attributes and attribute
    evaluation rules. An attribute grammar can specify both semantics and syntax
  Attributes:
    Definition: Variables  associated with non-terminals or terminals of the grammar
    Synthesized attributes: The result of the attribute evaluation rules, and may
      also use the values of the inherited attributes
    Inherited attributes: Passed down from parent nodes
Axiomatic Semantics:
  Assertions:
    Definition: Logical statements - predicates with variables, where the variables
      define the state of the program
    Precondition: An assertion before a statement
    Postcondition: An assertion following a statement (The desired result of the program)
    Weakest precondition: The least restrictive precondition that will guarantee the
      postcondition
  Syntax: "{precondition} equation {postcondition}"
  Selection: if B then S1 else S2
  Loop: while B do S end
