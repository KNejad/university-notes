{
	"Title": "Describing Syntax and Semantics",
	"Date": "Tue Jan 24 15:06:44 GMT 2017",
	"Lexeme": "The lowest level syntactic unit of a language (e.g., *, def, start, etc.)",
	"Token": "A category of Lexemes",
	"Backus-Naur Form": {
		"Definition": "Equivalent to context-free grammars",
		"Symbols": {
			"→": "Defines a rule",
			"⇒": "Using a rule",
			"|": "Or",
			";": "Statement before this then statement after this"
		},
		"Definitions": {
			"Non Terminals": "A finite alphabet (ie X, Y, Z)",
			"Terminals": "Characters which cannot be substituted further (ie a, b, c)",
			"Start Symbols": "The initial symbol to produce the alphabet with (ie X)",
			"Productions": "Available substitutions for characters to create strings (ie X -> aX: This means that X can be substituted by aX in our language)"
		}
	},
	"Extended BNF": [
		"Optional parts placed in square brackets",
		"Alternative parts of are placed inside parentheses and separated via vertical bars",
		"Repetitions are placed inside curly brackets"
	],
	"Attribute grammars": {
		"Definition": "A context-free grammar with the addition of attributes and attribute evaluation rules. An attribute grammar can specify both semantics and syntax.",
		"Attributes": {
			"Definition": "Variables  associated with non-terminals or terminals of the grammar",
			"Synthesized attributes": "The result of the attribute evaluation rules, and may also use the values of the inherited attributes.", 
			"Inherited attributes": "Passed down from parent nodes."
		},
		"_note": "Continue from slide 45"

	}
}
