Preemptive scheduling: A running process can be interrupted by the OS to give CPU time to another process
Non-preemptive scheduling: The process gives up control voluntarily
Time quantum: The amount of time a process has per execution cycle
Scheduling metrics:
  Turnaround time: The time it takes to execute one process to its completion
  Throughput: Number of processes that complete their execution per time unit
  Waiting time: Total time a process has been waiting in the ready queue
  Processor utilization: How busy the CPU is kept. This should be maximized so the CPU isn't "waisted"
Scheduling algorithms:
  - First come first serve: When a process arrives it is added to the end of the queue and once it starts it won't stop until it completes
  - Round robin: After a process time quantum is over the next process in the queue is started. Each process gets the same time quantum and is fairly added to the queue.
  - Priority scheduling:
      Description: Processes are scheduled based on a priority
      Policies:
        - Shortest job first: The job size is predicted with heuristics based on past CPU bursts and the process with the shortest predicted time runs first (non-preemptive)
        - Shortest remaining time: Same as SJF but a new process can replace the current running process if its remaining time is greater than the new process
        - Highest response ratio first: Based on the ratio between the processes waiting time and expected service time (non-preemptive)
        - Lottery scheduling: Give each process "lottery tickets" according to their priority and the winning process is picked randomly. Processes can exchange tickets if they want (preemptive)
        - Fair share scheduling: Fair share of resources is given to users processes. So each user gets the same system resources (preemptive)
      Multilevel queue scheduling: There can be multiple queues which each use a different scheduling algorithm (e.g. background and foreground processes)
Real-time systems:
  Description: Systems where it is critical that processes finish before their deadlines
  Scheduling types:
    Static: Scheduling is done before any process runs
    Dynamic: Continuously analyse and reschedule process execution
  Rate monotonic scheduling: Priority is assigned based on the frequency an event occurs
