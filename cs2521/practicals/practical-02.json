{
	"_title": "Practical 2",
	"_date": "Thu Feb  2 10:54:39 GMT 2017",
	"1":{
		"Task": "Show that O-notation relationships are transitive.",
		"Solution": {
			"Steps": [
				"Show that if f(n) = O(g(n)) and g(n) = O(h(n)) then f(n) = O(h(n))",
				"If f(n) = O(g(n)) then there is a c such that c*g(n) ≥ f(n) and there is a d such that g(n) ≤ d*h(n).",
				"From that we can see that f(n) <= c*d*h(n) for some n ≥ max(n_1, n_2) where n_1 is the minimal n for which O(g(n)) holds and n_2 for O(h(n))"
			]

		}
	},
	"2": {
		"Task": {
			"Description": "Find a simple g(n) such that f (n) = Θ(g(n)) for each of the following functions, and prove that the result holds",
			"a": "sum_{i=1}^n 3^i",
			"b": "4*2^n + 4^n + 20n^5"

		},
		"Solution": {
			"a": {
				"Steps": [
					"(3^{n+1} - 1)/2",
					{"_note": "We got the above from wikipedia. You don't figure it out yourself."}
				]	

			},
			"b": "g(4^n)"
		}
	},
	"3": {
		"Task": [
			"describe the following pseudocode fragment in summations, and simplify them as far as you can. What is the complexity of this algorithm (in terms of n)?",
			{"_file": "practical-03/3.psuedo"}
		],
		"Solution": {
			"Steps": [
				"Convert so tummations"
			]
		}	
	},
	"5": {
		"Solution": {
			"_file": "practical-02/sol5.pseudo"	
		}
	},
	"7": {
		"Solution": {

		}
	}
}
