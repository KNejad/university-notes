---
_title: Practical 09
_date: Thu Mar 23 13:19:29 GMT 2017
'1':
  Task: Draw the spanning forest after every iteration of the main loop in Kruskal’s
    and Prim’s algorithm for the following graph.
  Solution: ''
'2':
  Task: Is the path between two vertices in a MST necessarily the shortest path between
    the two vertices in the full graph? What is each edge in the graph has different
    weights? Give a proof or a counter-example.
  Solution: ''
'3':
  Task: Can Prim’s and Kruskal’s algorithms result in different MSTs?
  Solution: ''
'4':
  Task: Assume you are given a graph G and a MST T for this graph. Now assume that
    an edge (u, v) with weight w is added to the graph. Describe a O(n) algorithm
    which will find the MST of the modified graph
  Solution: If there is a cycle created traverse the cycle and remove the edge with
    the greatest weight
'5':
  Task:
    Task: describe an efficient data structure which can do the following on a weighted
      directed graph
    a: Merge two given components
    b: Locate which component contains a given vertex v
    c: Retrieve the minimum weight edge from a given commponent
  Solution:
    c: Store the min edge when constructing the graph
'6':
  Task: The single destination shortest path problem for a directed graph seeks a
    shortest path from every vertex to a specified vertex v. Give an efficient algorithm
    to solve this problem.
  Solution: Reverse all the weighted edges and then apply Dijkstras algorithm. Then
    reverse again
'7':
  Task: Can Dijkstras algorithm be modified to solve the longest path problem by changing
    the minimum within it to a maximum? Prove, or give a counter example
  Solution: No it can't. Because once a node is visited by the longest path it will
    not consider an even longer path which may go around
'8':
  Task: 'Arbitrage is the use of discrepancies in currency-exchange rates to make
    a profit. For example, there may be a small window of time during which 1 U.S.
    dollar buys 0.75 British pounds, 1 British pound buys 2 Australian dollars, and
    1 Australian dollar buys 0.70 U.S. dollars. At such a time, a smart trader can
    trade one U.S. dollar and end up with 0.75 × 2 × 0.7 = 1.05 U.S. dollars?a profit
    of 5%. Suppose that there are n currencies c 1 , ..., c n and an n × n table R
    of exchange rates, such that one unit of currency c i buys R[i, j] units of currency
    c j . Devise and analyze an algorithm to determine the maximum value of R[c 1
    , c i1 ] · R[c i1 , c i2 ] · · · R[c ik?1 , c ik ] · R[c ik , c 1 ] Hint: think
    all-pairs shortest path.'
  Solution: ''
