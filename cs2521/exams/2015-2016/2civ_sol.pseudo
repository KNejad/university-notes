function callSearch(G)
components = COMPONENTS(G)
	components.each do |c|
		search(G, SELECT(c))
	end
end function

function search(G, s)
	Array colour length(vert(G)) {BLACK , WHITE , GREY }
	for all u ∈ vert(G) do
		if u != s then
			colour[u] = WHITE
			dist[u] = Infinity
		end if
	end for
	colour[s] = GREY
	Queue Q = ∅
	enqueue(Q, s)
	while Q != ∅ do
		u = head(Q)
		for all v ∈ Adj[u] do
			if colour[v] != BLACK then
				colour[v] = GREY
				enqueue(Q, v)
				if dist[v] < dist[u] + Adj[u] then
					dist[v] = dist[u] + Adj[u]
				end if
			end if
		end for
		dequeue(Q)
		colour[u] = BLACK
	end while
end function
